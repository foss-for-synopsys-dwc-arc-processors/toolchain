# Copyright (C) 2016 Synopsys Inc.

# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the Free
# Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
# more details.

# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

# Use the multilib flags and check if we compile for the feature
# passed into ARG
proc check_target_arc { arg } {
    global target_alias
    global board
    global board_info

    if {[info exists board]} {
	set target_board $board
    } else {
	set target_board [target_info name]
    }

    if { [board_info $target_board exists compiler] } {
	set compiler [board_info $target_board compiler]
    } else {
	set compiler [find_gcc]
    }

    if { $compiler == "" } {
	return ""
    }

    regexp "/.* " $compiler compiler
    set compiler [string trimright $compiler " "]
    verbose "compiler is $compiler"

    if { [which $compiler] == 0 } {
	return ""
    }

    if { [board_info $target_board exists multilib_flags] } {
	set opts [board_info $target_board multilib_flags]
    } else {
	set opts ""
    }

    set result [eval exec $compiler $opts -dM -E - < /dev/null]
    verbose "Default defines : $result"
    return [regexp "$arg" "$result"]
}

# Return 1 if we compile for ARCv2 HS
proc check_target_archs { } {
    return [check_target_arc "__ARCHS__"]
}

# Return 1 if we compile for ARCv2 EM
proc check_target_arcem { } {
    return [check_target_arc "__ARCEM__"]
}

# Return 1 if we compile for ARC700
proc check_target_arc700 { } {
    return [check_target_arc "__ARC700__"]
}

# Return 1 if we compile for ARC6xx
proc check_target_arc6xx { } {
    if { [check_target_arc "__ARC600__"]
	 || [check_target_arc "__ARC601__"] } {
	return 1
    }
    return 0
}
